My name is Jagadeeswaran R
trainer

I started learning computers during 1986
Linux
C

windows was not invented on those days.
We worked in CUI 		no graphics


Fri, Sat, Sun

XML Basics
REST WS
SOAP WS

9 AM - 7 PM		6-7 pm is a buffer. Extra time

11:00 to 11:30 		break

13:00 to 14:00		lunch

16:00 to 16:30		break

6 pm we will usually finish training. and use remaining time for those who need additional inputs

-------------------------------------------------------------

every 40 minutes we will change the activity
we will have break out session where you can discuss with a small group

---------------------------------------------------------------

XML
	What XML stands for? What is the expansion for the abbreviation XML?
	eXtensible Markup Language
	---------------------------


1999
	XML was introduced.	
	Microsoft presented white paper in W3C		(world wide web consortium). 
	W3C is responsible for approving or rejecting web standards

	Microsoft recommended to use XML as a standard for information interchange.
	It was not accepted by W3C in the beginning. Then microsoft did some changes and presented again. in 1999, W3C approved XML as a standard for interchanging the information across data sources (heterogenous)

imagine
1) Kuppuri Chandana has Oracle database in their computer
2) Manasa has MySql db in their computer
3) I have IBM DB2 database in my computer

We three people have 3 different type of databases (this is called heterogenous data sources)

we are not having homogenous data sources

In this scenario, I want Kuppuri and Manasa to send their data to me
I need to import their data into my DB2 database

Solution:
----------	
Both of them should EXPORT data from their database
I have to IMPORT data into my database

when they export data, what format they choose to export
then they obtain a dump file. That file should be given to me.

I should use that file to import the data into my database

Before 1999, what was the format we were using to export data?????????
	CSV

aNy idea? what is CSV?
	Comma Separated Value

1, Raja, Sivakumar, 21
2, Abdul, Raheem, 22
3, John, Abraham, 20


The above info is a CSV

can you tell me, what is the age of Abdul?????
	a human being can find the age of abdul as 22

But for a program, it is not possible

<STUDENTS>
	<STUDENT>
		<ID>1</ID>
		<FIRSTNAME>Raja</FIRSTNAME>
		<LASTNAME>Sivakumar</LASTNAME>
		<AGE>21</AGE>
	</STUDENT>
	<STUDENT>
		<ID>2</ID>
		<FIRSTNAME>Abdul</FIRSTNAME>
		<LASTNAME>Raheem</LASTNAME>
		<AGE>22</AGE>
	</STUDENT>
	<STUDENT>
		<ID>3</ID>
		<FIRSTNAME>John</FIRSTNAME>
		<LASTNAME>Abraham</LASTNAME>
		<AGE>20</AGE>
	</STUDENT>
</STUDENTS>

can you tell me the age of Abdul Raheem??? (by looking at the above xml code?)
what is the age of a student, whose ID is 2 ???

XML is more comprehensive when compared to CSV?

csv is not self explanatory?
	self explanation is provided by meta data. there was no meta data in CSV
but in XML,
	every data is self explanatory by the TAGS/ elements

There are always misconception like confusion with HTML when they start learning XML
so it is important to compare HTML and XML

HTML
	is meant for presentation. (Whatever we code in HTML is for display purpose)
XML
	is meant for representation	(not for display purpose) for definition of data

Both are Markup language. Thats why confused
Both are based or derived from SGML		Standard Generalized Markup Language
	SGML has a vast vocabulary and also allows user defined tags.\

HTML is predefined set of tags
XML is user defined tags

What is the need for XML?
	There was a limitation in the application development.
	Applications were developed in different languages
		C, C++, Java, Visual Basic, VC++ etc 
	Every language had different binary code. 
	They were not interoperable.	Means, they cannot interact with each other
	can java program method, call a method of visual basic program method?	NO

That time, Enterprises Integration was a trend.
	Ex: we should be able to withdraw money from Any atm??????
		Before 1999, there were ATMs that accept only VISA or only Master Card 

	Because, if we have visa card, we go to master card ATM, they cannot update the database of visa. Because that is different program done in different language.

	Now, you understand the problem?????

	1999 - 2001 		This was a period, where, language interoperability was taken as a challenge and lot of efforts put on these new invention.

	Finally, in 2001, W3C introduced SOA		Service Oriented Architecture.

	Thats when WEB SERVICES were introduced. 
	1) Web services are programs that can be coded in one language. But can be accessed from other languages also

The main reason for this interoperability was XML.

	Program 1: created in visual basic, calls the method of another program created in Java. 
		OMG, how is it possible???????????
		the information sent between these two programs was in the format of XML


They were looking for a format that is understood by any language?
	text is the only format understood by any language.

but in text, business logic or data type restriction is not there. any value is accepted by text.
but XML offers technique to validate the data present in a text also.


<STUDENTS>
	<STUDENT>
		<ID>1</ID>
		<FIRSTNAME>Raja</FIRSTNAME>
		<LASTNAME>Sivakumar</LASTNAME>
		<AGE>21</AGE>
	</STUDENT>
	<STUDENT>
		<ID>2</ID>
		<FIRSTNAME>Abdul</FIRSTNAME>
		<LASTNAME>Raheem</LASTNAME>
		<AGE>22</AGE>
	</STUDENT>
	<STUDENT>
		<ID>3</ID>
		<FIRSTNAME>John</FIRSTNAME>
		<LASTNAME>Abraham</LASTNAME>
		<AGE>20</AGE>
	</STUDENT>
</STUDENTS>

<TABLE>
	<THEAD>
		<TH>ID</TH>
		<TH>First Name</TH>
		<TH>Last Name</TH>
		<TH>Age</TH>
	</THEAD>
	<TBODY>
		<TR>
			<TD>1</TD>
			<TD>Raja</TD>
			<TD>Sivakumar</TD>
			<TD>21</TD>
		</TR>
		<TR>
			<TD>2</TD>
			<TD>Abdul</TD>
			<TD>Raheem</TD>
			<TD>22</TD>
		</TR>
		<TR>
			<TD>3</TD>
			<TD>John</TD>
			<TD>Abraham</TD>
			<TD>20</TD>
		</TR>
	</TBODY>
</TABLE>


What is the TD? when the TD is 1?

difference between HTML and XML



XML data is a plain text. Understood by any programming language
XML allows validation of data present in the tags. Each tag can restrict the type of data present.

XML alone, cannot do this validation. 

We have to use techniques like

DTD/ XSD validators

CSS/ XSL for formating the information while presenting in browser


XML is a text based markup language that is used to represent information that can be interchanged across heterogenous data sources or applications

-------------------------------	
<a href="www.google.com" >Google</a>

Building blocks for XML document:

1) Element		tags are elements in XML documents		here, a is the element
2) Attribute		here, href is the attribute
3) attribute value	here, www.google.com is the value of the attribute
4) content		here Google is the content
5) empty tags		example in html:		<br/>	
			the empty tags end with /		they do not have end tag
			they do not have start and end tag. Both tags are same empty tag
6) Entities
			in html:		&nbsp;		is an example for entities
				Why we need entities?
			there are some symbols used in XML that cannot be used as content
			for example:
				<formula>a &lt; b</formula>

			&lt;		is less than
			&gt;		is greater than

7) namespace
			you can compare this namespace concept with package concept in java.
			while java packages group the classes
			xml namespaces group the type definitions	(user defined types)
8) comments
			<!--	-->			in any markup language, comments


NOW,
	if you create an XML document, basically, it should be WELL FORMED

what is WELLFORMEDNESS?
There are some basic rules that a XML file must comply. 
1) tags must be nested properly
2) case sensitive. (values inside "" can be any case. no issues. ELEMENTS, ATTRIBUTES are case sensitive)
		means, opening tag and closing tag must be same case
		<FIRSTNAME>Raja</firstname>		THIS IS NOT ALLOWED
3) the values of attributes must be in double quotes. EVEN IF IT IS A NUMBER
		<EMPLOYEE ID="1">			here, 1 is also inside double quotes

4) empty tags end with /
		<BR/>
5) There must be only ONE root element in a document. All elements are inside that root element only
	
Check what are the rules for well formed ness of XML document.

How will you check the wellformed ness of a XML document?
	if you open a XML file in browser, then Browser can check well formed ness


<STUDENTS>
	<STUDENT>
		<ID>1</ID>
		<FIRSTNAME>Raja</FIRSTNAME>
		<LASTNAME>Sivakumar</LASTNAME>
		<AGE>21</AGE>
	</STUDENT>
	<STUDENT>
		<ID>2</ID>
		<FIRSTNAME>Abdul</FIRSTNAME>
		<LASTNAME>Raheem</LASTNAME>
		<AGE>22</AGE>
	</STUDENT>
	<STUDENT>
		<ID>3</ID>
		<FIRSTNAME>John</FIRSTNAME>
		<LASTNAME>Abraham</LASTNAME>
		<AGE>20</AGE>
	</STUDENT>
</STUDENTS>


save the file with .xml as extension

open the file in a browser


Create a XML file for the below info

EID
FNAME
LNAME
DEPT
	DID
	DNAME

Create the xml file and add some sample values

--------------------------------------
Now, that we have created the XML File. 
Scenario:
	We have 3 branches.
	1) Chennai
	2) Hyderabad
	3) Bangalore

Head office:	Mumbai

Every week friday, the branches send the XML files to the head office.

head office associate collate them into 1 single xml file.

But sometimes, branches send inconsitent data

ex:
	Chennai branch missed DEPT
	Hyderbad branch added extra elements/tags
	
so, before they send the file, we want them to validate the files and send

validation means NOT ONLY well formed ness. 

VALID documents are those documents that conforms to the format we specify
	only the elements we specify, must be present in the XML file
	only in the order
	only in the upper/lowr case we specify
	only the possible values we specify

HOW WE ARE GOING TO ACHIEVE THIS?	(validating XML documents)
we will send the schema file to the branches. 
	Branches should create the documents that conforms to the schema

to create the schema/structure of the documents, we may use 
	DTD (or) XSD

suppose, there is a table in mysql.
	we cannot add any record or any structure. Right?
	only the data that conforms to the table structure is allowed to add as a row.

Introducing DTD
	Document Type Definition

DTD has its own syntax. 

SYMBOLS USED IN DTD

+ 	one or more
* 	zero or more
?	zero or one		optional


Lets see an example:

!ELEMENT STUDENTS (STUDENT)+
!ELEMENT STUDENT (ID,FIRSTNAME,LASTNAME,AGE)
!ELEMENT ID (#PCDATA)
!ELEMENT FIRSTNAME (#PCDATA)
!ELEMENT LASTNAME (#PCDATA)
!ELEMENT AGE (#PCDATA)


DTD language do not have much data types. 
CDATA
PCDATA

PCDATA parses the data and it will convert entities into values 	&gt;	WILL BE PARSED INTO > in output
CDATA will display &gt; AS IT IS

once we have created a DTD, we send it to the branches.

Now, branches have created the XML File that conforms to the DTD.
But how do you validate the XML file against the DTD

dtd validators are javascript programs. 
we can use online DTD validator


If you create a separate DTD file, and then it is called as External DTD. 

If DTD is a part of your XML file itself, then it is internal DTD or EMBEDDED DTD

when we use EXTERNAL DTD, we should refer the DTD file in the XML file using:
	<!DOCTYPE note SYSTEM "Note.dtd">

when we use INTERNAL DTD, 

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE note [
<!ENTITY nbsp "&#xA0;">
<!ENTITY writer "Writer: Donald Duck.">
<!ENTITY copyright "Copyright: W3Schools.">
]>

<note>
<to>Tove</to>
<from>Jani</from>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
<footer>&writer;&nbsp;&copyright;</footer>
</note>

now example:
<!DOCTYPE STUDENTS [
<!ELEMENT STUDENTS (STUDENT)+ >
<!ELEMENT STUDENT (ID,FIRSTNAME,LASTNAME,AGE) >
<!ELEMENT ID (#PCDATA) >
<!ELEMENT FIRSTNAME (#PCDATA) >
<!ELEMENT LASTNAME (#PCDATA) >
<!ELEMENT AGE (#PCDATA) >
]>

<STUDENTS>
	<STUDENT>
		<ID>1</ID>
		<FIRSTNAME>Raja</FIRSTNAME>
		<LASTNAME>Sivakumar</LASTNAME>
		<AGE>21</AGE>
	</STUDENT>

	<STUDENT>

		<ID>2</ID>
		<FIRSTNAME>Abdul</FIRSTNAME>
		<LASTNAME>Raheem</LASTNAME>
		<AGE>22</AGE>
	</STUDENT>
	<STUDENT>
		<ID>3</ID>
		<FIRSTNAME>John</FIRSTNAME>
		<LASTNAME>Abraham</LASTNAME>
		<AGE>20</AGE>
	</STUDENT>
</STUDENTS>

save this file as students.xml file

we can upload xml file or paste the xml code in the validator website.

https://www.truugo.com/xml_validator/

validate the xml file against DTD

do some mistakes in the xml code and check in validator

----------------------------------------------------------------------
ATTRIBUTES IN DTD
	DEPARTMENT shall be the attribute

Now, a doubt will come, in XML itself, what should be the element, what should be attribute?

because,

ID can be attribute or element? how to decide?

<STUDENT ID="1">
	
</STUDENT>

(or)

<STUDENT>
	<ID>1</ID>
</STUDENT>

which of the above is correct?

Attribute? or Child element?

1) If you find a student by Id, then it qualifies to be a key or primary key.
	In that case, ID must be attribute
2) If you categories by a field, that field must be ATTRIBUTE
3) if you filter or sort by a field, then that field must be ATTRIBUTE
4) If you rarely update or never update a field, then that field must be ATTRIBUTE

ID, CATEGORY such fields comes under the above rules.

so they are attributes

i am going to modify the xml file so that ID becomes attribute

<STUDENTS>
	<STUDENT ID="1">
		<FIRSTNAME>Raja</FIRSTNAME>
		<LASTNAME>Sivakumar</LASTNAME>
		<AGE>21</AGE>
	</STUDENT>

	<STUDENT ID="2">
		<FIRSTNAME>Abdul</FIRSTNAME>
		<LASTNAME>Raheem</LASTNAME>
		<AGE>22</AGE>
	</STUDENT>
	<STUDENT ID="3">
		<FIRSTNAME>John</FIRSTNAME>
		<LASTNAME>Abraham</LASTNAME>
		<AGE>20</AGE>
	</STUDENT>
</STUDENTS>



=======================EXAMPLE FOR DTD WITH ATTRIBUTE==========================
<!DOCTYPE STUDENTS [
<!ELEMENT STUDENTS (STUDENT)+ >
<!ELEMENT STUDENT (FIRSTNAME,LASTNAME,AGE) >
<!ELEMENT ID (#PCDATA) >
<!ELEMENT FIRSTNAME (#PCDATA) >
<!ELEMENT LASTNAME (#PCDATA) >
<!ELEMENT AGE (#PCDATA) >
<!ATTLIST STUDENT 
	ID CDATA #REQUIRED 
	CATEGORY CDATA #IMPLIED>
]>

<STUDENTS>
	<STUDENT ID="1" CATEGORY="ONE">
		<FIRSTNAME>Raja</FIRSTNAME>
		<LASTNAME>Sivakumar</LASTNAME>
		<AGE>21</AGE>
	</STUDENT>

	<STUDENT ID="2">
		<FIRSTNAME>Abdul</FIRSTNAME>
		<LASTNAME>Raheem</LASTNAME>
		<AGE>22</AGE>
	</STUDENT>
	<STUDENT ID="3">
		<FIRSTNAME>John</FIRSTNAME>
		<LASTNAME>Abraham</LASTNAME>
		<AGE>20</AGE>
	</STUDENT>
</STUDENTS>
==============================================
You are going to create an XML file with internal DTD 

EMPLOYEES
	EMPLOYEE
		attributes:	ID, DESIGNATION
		FNAME
		LNAME
		DEPT
			DID
			DNAME
==========================================
before lunch break, we created XML file with embedded DTD schema.

DTD is very limited. 
It does not have much data types and do not allow us to specify the pattern or range of values that are allowed in simple types.

Introducing XSD
-------------------------------------------XSD-----------------
Xml Schema Definition
----------------------

xsd will always be external schema file.
That can be referred from a XML file

If we compare this XSD with DTD,

XSD
	syntax is same as XML syntax. DTD has its own syntax.
	allows creating 
		SimpleTypes
		ComplexTypes
	lot of options to specify
		all
		choice
		sequence
	and many content models and types

	we can create user defined types in XSD

	in DTD, suppose if we define 		EMPLOYEE (ID, FNAME, LNAME)
	then in XML,
		ID, FNAME, LNAME	must appear in that order only.

	But in XSD, We can specify whether it should be in the specified order or any order or one among them??????
	all such possibilities are there.

------------------------
Simple example:
<STUDENTS>
	<STUDENT>
		<ID>S001</ID>
		<FIRSTNAME>Rahul</FIRSTNAME>
		<LASTNAME>Dravid</LASTNAME>
		<AGE>50</AGE>
	</STUDENT>
	<STUDENT>
		<ID>S002</ID>
		<FIRSTNAME>Sachin</FIRSTNAME>
		<LASTNAME>Tendulkar</LASTNAME>
		<AGE>50</AGE>
	</STUDENT>
	<STUDENT>
		<ID>S003</ID>
		<FIRSTNAME>MS</FIRSTNAME>
		<LASTNAME>Dhoni</LASTNAME>
		<AGE>50</AGE>
	</STUDENT>
</STUDENTS>



XSD introduce a concept called Namespaces.
Namespaces are very important to distinguish between predefined tags and user defined tags.

<BR/>		this is defined in HTML
<break/>	this is my own tag. how to differenciate between html and my tag?
<jag:break/>	this is to specify that this tag is defined in a namespace that is prefixed with "jag"

<xsd:schema>	that means, schema is an element defined in a namespace, that is prefixed with "xsd"

schema is the root element for a XSD file


sequence
	specific order
all
	any order
choice
	one from the list

xmlns		xml namespace
	is used to import a namespace and give a prefix


Example:
-----------

<STUDENTS>
	<STUDENT>
		<ID>S001</ID>
		<FIRSTNAME>Rahul</FIRSTNAME>
		<LASTNAME>Dravid</LASTNAME>
		<AGE>50</AGE>
	</STUDENT>
	<STUDENT>
		<ID>S002</ID>
		<FIRSTNAME>Sachin</FIRSTNAME>
		<LASTNAME>Tendulkar</LASTNAME>
		<AGE>50</AGE>
	</STUDENT>
	<STUDENT>
		<ID>S003</ID>
		<FIRSTNAME>MS</FIRSTNAME>
		<LASTNAME>Dhoni</LASTNAME>
		<AGE>50</AGE>
	</STUDENT>
</STUDENTS>








<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:element name="STUDENTS" type="sts" />
<xsd:complexType name="sts">
	<xsd:sequence>
		<xsd:element name="STUDENT" type="st" maxOccurs="unbounded" />
	</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="st">
	<xsd:sequence>
		<xsd:element name="ID" type="xsd:string" />
		<xsd:element name="FIRSTNAME" type="xsd:string" />
		<xsd:element name="LASTNAME" type="xsd:string" />
		<xsd:element name="AGE" type="xsd:string" />
	</xsd:sequence>
</xsd:complexType>
</xsd:schema>



if we do not use minOccurs or maxOccurs then it is assumed as 1


<xsd:complexType name="st">
	<xsd:all>
		<xsd:element name="ID" type="xsd:string" />
		<xsd:element name="FIRSTNAME" type="xsd:string" />
		<xsd:element name="LASTNAME" type="xsd:string" />
		<xsd:element name="AGE" type="xsd:string" />
	</xsd:all>
</xsd:complexType>

by using "all" instead of "sequence"
we allow all the elements in any order
sequence means only in the specified sequence/order
all means any order but all

choice
	means, only 1 among the list of elements to be present in the content


EMPLOYEES
	EMPLOYEE
		ID
		FNAME
		LNAME
		DEPT
			DID
			DNAME




https://www.liquid-technologies.com/online-xsd-validator

